# RehearseKit TrueNAS Configuration
# Customized for your setup: 10.0.0.155 with existing PostgreSQL and Redis

# ============================================
# Docker Registry
# ============================================
DOCKER_REGISTRY=docker.io
DOCKER_USERNAME=kossoy
IMAGE_TAG=latest

# ============================================
# Network Configuration
# ============================================
TRUENAS_IP=10.0.0.155

# Port mappings (30070-30072 to avoid conflicts)
FRONTEND_PORT=30070
BACKEND_PORT=30071
WEBSOCKET_PORT=30072

# ============================================
# Database Configuration (Existing PostgreSQL on TrueNAS)
# ============================================
# PostgreSQL on port 65430, user: god
DATABASE_URL=postgresql+asyncpg://god:E1J0&D998Vyzya@10.0.0.155:65430/rehearsekit

# ============================================
# Redis Configuration (Existing TrueNAS Redis App)
# ============================================
# Using existing TrueNAS Redis app on custom port
REDIS_URL=redis://10.0.0.155:30059/0

# ============================================
# Application URLs
# ============================================
API_URL=http://10.0.0.155:30071
WS_URL=ws://10.0.0.155:30072

# ============================================
# Storage Paths (TrueNAS Datasets on Odin pool)
# ============================================
# Using Odin pool Applications directory
STORAGE_PATH=/mnt/Odin/Applications/RehearseKit

# NOTE: We're using existing TrueNAS Redis app, no separate Redis volume needed

# ============================================
# CORS Origins
# ============================================
# Add your network subnet or specific IPs
CORS_ORIGINS=http://localhost:30070,http://10.0.0.155:30070

# ============================================
# Application Settings
# ============================================
JOB_RETENTION_DAYS=7

# ============================================
# Google OAuth Configuration
# ============================================
# NOTE: Replace these with your actual values in production
NEXT_PUBLIC_GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=https://rehearsekit.uk/auth/callback/google

# ============================================
# JWT Authentication
# ============================================
# NOTE: Generate a new secret key for production
JWT_SECRET_KEY=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440
REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================
# Admin Configuration
# ============================================
ADMIN_EMAIL=your-admin-email@example.com

# ============================================
# Setup Instructions
# ============================================
# 1. Create database: psql -h 10.0.0.155 -p 65430 -U god -d postgres -c "CREATE DATABASE rehearsekit;"
# 2. Create directory: sudo mkdir -p /mnt/Odin/Applications/RehearseKit
# 3. Set permissions: sudo chown -R 1000:1000 /mnt/Odin/Applications/RehearseKit
# 4. Test PostgreSQL: psql -h 10.0.0.155 -p 65430 -U god -d rehearsekit -c "SELECT 1;"
# 5. Test Redis: redis-cli -h 10.0.0.155 -p 30059 ping
# 6. Copy this to /mnt/Odin/Applications/RehearseKit/config/.env
# 7. Run: docker-compose pull && docker-compose up -d
# 8. Access: http://10.0.0.155:30070

