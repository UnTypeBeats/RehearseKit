name: Deploy Backend to Cloud Run

on:
  # Disabled auto-deploy until GitHub Secrets are configured
  # push:
  #   branches: [main]
  #   paths:
  #     - 'backend/**'
  #     - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:  # Manual trigger only

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  SERVICE_NAME: rehearsekit-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker
      
      - name: Build Docker image
        working-directory: ./backend
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker tag gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                     gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
      
      - name: Push to Container Registry
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars "REDIS_URL=${{ secrets.REDIS_URL }}" \
            --set-env-vars "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" \
            --set-env-vars "CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}" \
            --set-env-vars "GCS_BUCKET_UPLOADS=${{ secrets.GCS_BUCKET_UPLOADS }}" \
            --set-env-vars "GCS_BUCKET_STEMS=${{ secrets.GCS_BUCKET_STEMS }}" \
            --set-env-vars "GCS_BUCKET_PACKAGES=${{ secrets.GCS_BUCKET_PACKAGES }}" \
            --set-env-vars "STORAGE_MODE=gcs" \
            --service-account ${{ secrets.CLOUD_RUN_SA_EMAIL }} \
            --vpc-connector ${{ secrets.VPC_CONNECTOR_NAME }} \
            --add-cloudsql-instances ${{ secrets.CLOUD_SQL_INSTANCE }} \
            --memory 2Gi \
            --cpu 2 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 300s \
            --port 8000
      
      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --format 'value(status.url)')
          echo "Backend deployed to: $SERVICE_URL"

